{"version":3,"sources":["images/12.png","config/user.js","config/index.js","lib/ask.js","containers/User/Login/index.jsx"],"names":["module","exports","__webpack_require__","p","User","getUsers","method","url","right","undefined","Object","assign","baseURL","ask","name","opt","arguments","length","headers","data","params","responseType","_api$name","api","instance","axios","create","withCredentials","interceptors","response","use","console","log","error","Promise","reject","request","Login","es_form","withRouter","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toRegister","setState","panel","compareToPassword","rule","value","callback","form","getFieldValue","cancelReset","forgetPassword","loginButton","e","preventDefault","validateFields","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","err","values","wrap","_context","prev","next","abrupt","stop","_x","_x2","apply","switchPanel","getFieldDecorator","state","react_default","createElement","key","className","Item","rules","type","message","validator","spaceRemove","required","input","placeholder","es_button","onClick","onBlur","handleConfirmBlur","aaa","setFieldsValue","defineProperty","concat","trim","src","require","alt","href","target","Component"],"mappings":"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","file":"static/js/4.9fcd2105.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/12.d69fe950.png\";","const User = {\r\n  //登录\r\n  getUsers: {\r\n    method: 'GET',\r\n    url: '/login',\r\n    right: undefined\r\n  }\r\n};\r\n\r\nexport default User;\r\n","import User from './user';\r\nexport default Object.assign({}, User);\r\n","import api from '../config';\r\nimport axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n\r\nconst baseURL = 'http://127.0.0.1:3000';\r\n\r\n// const userId = Cookies.get('userId');\r\n// const token = Cookies.get('token');\r\n\r\nexport default function ask(name, opt = {}) {\r\n  //取传进来的用户信息\r\n  let { headers, data, params, responseType } = opt;\r\n  params = params || {};\r\n  data = data || {};\r\n  // params.token = Cookies.get('token');\r\n  // params.userId = Cookies.get('userId');\r\n  // data.token = Cookies.get('token');\r\n  // data.userId = Cookies.get('userId');\r\n\r\n  params = Object.assign(\r\n    {},\r\n    {\r\n      // 请求令牌\r\n      // token,\r\n      // 用户ID\r\n      // userId\r\n    },\r\n    params\r\n  );\r\n\r\n  data = Object.assign(\r\n    {},\r\n    {\r\n      // 请求令牌\r\n      // token,\r\n      // 用户ID\r\n      // userId\r\n    },\r\n    data\r\n  );\r\n\r\n  /**\r\n   * 获取接口信息\r\n   * 如果后期涉及到权限\r\n   * 可以在接口信息里面\r\n   * 设定 并取到\r\n   */\r\n  let { method, url } = api[name];\r\n\r\n  let instance = axios.create({\r\n    baseURL,\r\n    // `withCredentials` 表示跨域请求时是否需要使用凭证\r\n    withCredentials: false\r\n  });\r\n\r\n  // 响应中间处理层\r\n  instance.interceptors.response.use(\r\n    function(response) {\r\n      // 请求成功后 处理在此\r\n      console.log(response);\r\n      return response.data;\r\n    },\r\n    function(error) {\r\n      // 请求失败 错误在此\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  let promise = instance.request({\r\n    responseType,\r\n    url,\r\n    method,\r\n    headers,\r\n    params,\r\n    data\r\n  });\r\n\r\n  return promise;\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Input, message, Form } from 'antd';\r\n// import { observer, inject } from 'mobx-react';\r\nimport './index.scss';\r\nimport ask from '../../../lib/ask';\r\n\r\n@withRouter\r\n@Form.create()\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      panel: ''\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let aaa = await ask('getUsers');\r\n    if (aaa) {\r\n      console.log(aaa);\r\n    }\r\n  }\r\n\r\n  //到注册面板\r\n  toRegister = () => {\r\n    this.setState({\r\n      panel: 2\r\n    });\r\n  };\r\n\r\n  //与第一密码比较\r\n  compareToPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('两次输入密码不一致');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  //取消\r\n  cancelReset = () => {\r\n    this.setState({\r\n      panel: ''\r\n    });\r\n  };\r\n  //忘记密码\r\n  forgetPassword = () => {\r\n    this.setState({\r\n      panel: 1\r\n    });\r\n  };\r\n  //登录\r\n  loginButton = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (err) return;\r\n    });\r\n  };\r\n\r\n  //去除空格\r\n  spaceRemove(type, value, callback) {\r\n    if (value) {\r\n      this.props.form.setFieldsValue({ [`${type}`]: value.trim() });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  switchPanel = () => {\r\n    const { getFieldDecorator } = this.props.form;\r\n    switch (this.state.panel) {\r\n      case 1:\r\n        return [\r\n          <div key=\"1\" className=\"welcome-home\">\r\n            忘记密码\r\n          </div>,\r\n          <div key=\"2\" className=\"login-info\">\r\n            <Form>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('nextEmail', {\r\n                  rules: [\r\n                    { type: 'email', message: '请输入合法的邮箱地址' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('nextEmail', value, callback)\r\n                    },\r\n                    { required: true, message: '邮箱必须填写' }\r\n                  ]\r\n                })(<Input placeholder=\"输入邮箱\" />)}\r\n              </Form.Item>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('password', {\r\n                  rules: [\r\n                    { required: true, message: '密码必须填写' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('password', value, callback)\r\n                    }\r\n                  ]\r\n                })(<Input type=\"password\" placeholder=\"输入密码\" />)}\r\n              </Form.Item>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('certainPassword', {\r\n                  rules: [\r\n                    { required: true, message: '密码必须填写' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('certainPassword', value, callback)\r\n                    },\r\n                    { validator: this.compareToPassword }\r\n                  ]\r\n                })(<Input type=\"password\" placeholder=\"再次输入密码\" />)}\r\n              </Form.Item>\r\n            </Form>\r\n          </div>,\r\n          <div key=\"3\" className=\"login-footer\">\r\n            <Button type={'primary'} onClick={this.loginButton}>\r\n              重置\r\n            </Button>\r\n            <div className=\"cancel-reset-pwd\" onClick={this.cancelReset}>\r\n              取消\r\n            </div>\r\n          </div>\r\n        ];\r\n      case 2:\r\n        return [\r\n          <div key=\"1\" className=\"welcome-home\">\r\n            注册账号\r\n          </div>,\r\n          <div key=\"2\" className=\"login-info\">\r\n            <Form>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('username', {\r\n                  rules: [\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('username', value, callback)\r\n                    },\r\n                    { required: true, message: '用户名必须填写' }\r\n                  ]\r\n                })(<Input placeholder=\"请输入用户名\" />)}\r\n              </Form.Item>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('email', {\r\n                  rules: [\r\n                    { type: 'email', message: '请输入合法的邮箱地址' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('email', value, callback)\r\n                    },\r\n                    { required: true, message: '邮箱必须填写' }\r\n                  ]\r\n                })(<Input placeholder=\"请输入邮箱\" />)}\r\n              </Form.Item>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('password', {\r\n                  rules: [\r\n                    { required: true, message: '密码必须填写' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('password', value, callback)\r\n                    }\r\n                  ]\r\n                })(<Input type=\"password\" placeholder=\"请输入密码\" />)}\r\n              </Form.Item>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('certainPassword', {\r\n                  rules: [\r\n                    { required: true, message: '密码必须填写' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('certainPassword', value, callback)\r\n                    },\r\n                    { validator: this.compareToPassword }\r\n                  ]\r\n                })(<Input type=\"password\" placeholder=\"再次输入密码\" />)}\r\n              </Form.Item>\r\n            </Form>\r\n          </div>,\r\n          <div key=\"3\" className=\"login-footer\">\r\n            <Button type={'primary'} onClick={this.loginButton}>\r\n              注册\r\n            </Button>\r\n            <div className={'re-login'}>\r\n              <span>我已有账号?</span>\r\n              <a onClick={this.cancelReset}>登录</a>\r\n            </div>\r\n          </div>\r\n        ];\r\n      default:\r\n        return [\r\n          <div key=\"1\" className=\"welcome-home\">\r\n            欢迎来到图书管理系统\r\n          </div>,\r\n          <div key=\"2\" className=\"login-info\">\r\n            <Form>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('loginEmail', {\r\n                  rules: [\r\n                    { type: 'email', message: '请输入合法的邮箱地址' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('loginEmail', value, callback)\r\n                    },\r\n                    { required: true, message: '邮箱必须填写' }\r\n                  ]\r\n                })(<Input placeholder=\"请输入邮箱\" />)}\r\n              </Form.Item>\r\n              <Form.Item className={'re-border-bold'}>\r\n                {getFieldDecorator('password', {\r\n                  rules: [\r\n                    { required: true, message: '密码必须填写' },\r\n                    {\r\n                      validator: (rule, value, callback) =>\r\n                        this.spaceRemove('password', value, callback)\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    type=\"password\"\r\n                    placeholder=\"请输入密码\"\r\n                    onBlur={this.handleConfirmBlur}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <div>\r\n                <a onClick={this.forgetPassword}>忘记密码？</a>\r\n              </div>\r\n            </Form>\r\n          </div>,\r\n          <div key=\"3\" className=\"login-footer\">\r\n            <Button type={'primary'} onClick={this.loginButton}>\r\n              登录\r\n            </Button>\r\n            <div className={'re-login'}>\r\n              <span>还没有账号？</span>\r\n              <a onClick={this.toRegister}>立即注册</a>\r\n            </div>\r\n          </div>\r\n        ];\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"login-body\">\r\n        <content className=\"login-content\">\r\n          <div className=\"left-panel\">{this.switchPanel()}</div>\r\n          <div className=\"right-panel\">\r\n            <img src={require('../../../images/12.png')} alt=\"\" />\r\n          </div>\r\n        </content>\r\n        <footer className=\"login-footer\">\r\n          Copyright © 2019毕业设计 github:&nbsp;\r\n          <a href=\"https://github.com/air10086/reactbook\" target=\"blank\">\r\n            air10086\r\n          </a>\r\n          &nbsp;欢迎star\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}